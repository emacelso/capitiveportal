# Generated by Django 3.2.4 on 2021-06-15 00:13

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Portal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('location', models.CharField(max_length=200)),
                ('ssid', models.CharField(blank=True, max_length=32)),
                ('psk', models.CharField(blank=True, max_length=64)),
                ('active', models.BooleanField(default=True)),
                ('allow_printing', models.ManyToManyField(blank=True, to='auth.Group')),
            ],
        ),
        migrations.CreateModel(
            name='PrintTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('type', models.CharField(choices=[('Dymo', 'Dymo Labelwriter'), ('Paper', 'Regular Paper')], default='Paper', max_length=16)),
                ('template', models.TextField(help_text='<p>For regular paper templates, the template is a block of HTML that will be repeated once for each voucher code. The following text will be substituted in the template:</p>\n        <ul>\n            <li>#PORTALNAME# - The name of the portal\n            <li>#SSID# - SSID set in the portal\n            <li>#PSK# - Password set in the portal\n            <li>#CODE# - The voucher code for this voucher\n            <li>#TIMELIMIT# - The time limit set in the roll\n            <li>#ROLLNUMBER# - The roll number\n            <li>#ROLLDESCRIPTION# - The description of the roll\n            <li>#LOOPCOUNTER# - The number of the ticket from this print job. Useful for creating unique HTML IDs\n        </ul>\n        <p>For Dymo Labelwriter templates, the template is a valid Dymo XML file. The following objects will be replaced with their corresponding values:</p>\n        <ul>\n            <li>PortalName\n            <li>SSID\n            <li>PSK\n            <li>TimeLimit\n            <li>VoucherCode\n            <li>QRCode - replaced with the QR string to connect to the network, eg. WIFI:T:WPA;S:MySSID;P:MyPresharedKey;;\n        </ul>\n        <p>Note: The Dymo library does not properly parse Color tags without any content in them. Add a space between the opening and closing Color tags if you get an error.</p>\n    ')),
            ],
        ),
        migrations.CreateModel(
            name='Roll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('description', models.CharField(max_length=200)),
                ('time_limit', models.CharField(max_length=200)),
                ('active', models.BooleanField(default=True)),
                ('voucher_csv', models.FileField(blank=True, null=True, upload_to='')),
                ('portal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='voucher.portal')),
            ],
        ),
        migrations.CreateModel(
            name='Voucher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=30, unique=True)),
                ('date_printed', models.DateTimeField(blank=True, null=True, verbose_name='date printed')),
                ('printed_by', models.CharField(blank=True, max_length=200)),
                ('roll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='voucher.roll')),
            ],
        ),
        migrations.AddField(
            model_name='portal',
            name='print_templates',
            field=models.ManyToManyField(to='voucher.PrintTemplate'),
        ),
    ]
